<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
   
	<changeSet author="initialDB" id="6" dbms="mysql">
		<validCheckSum/>
		<preConditions onFail="MARK_RAN">
		 	<not>
            	<tableExists tableName="TAG"/>
         	</not>
        </preConditions>
        <comment>DB initialization.</comment>
	    <sql>
			drop table if exists AGENT;

			drop table if exists NUSER;

			drop table if exists PERF_TEST;

			drop table if exists PERF_TEST_TAG;

			drop table if exists TAG;

			drop table if exists system_monitor;
		
		    create table AGENT (
				id bigint(20) not null auto_increment,
				approved char(255) not null,
				hostName varchar(255),
				ip varchar(255),
				port integer,
				region varchar(255),
				state varchar(20),
				system_stat varchar(2000),

				version varchar(256),
				primary key (id)
		    );
		
		    create table NUSER (
			    id bigint(20) not null auto_increment,
		        created_date datetime,
		        last_modified_date datetime,
		        authentication_provider_class varchar(255),
		        description varchar(255),
		        email varchar(255),
		        enabled char(2) not null,
		        is_external char(2),
		        mobile_phone varchar(255),
		        password varchar(255),
		        role_name varchar(255) not null,
		        timeZone varchar(255),
		        user_id varchar(255) not null unique,
		        user_language varchar(255),
		        user_name varchar(255),
		        created_user bigint,
		        last_modified_user bigint,
		        primary key (id)
		    );

		
		    create table PERF_TEST (
			    id bigint(20) not null auto_increment,
				created_date datetime,
				last_modified_date datetime,
				agent_count integer,
			    safe_distribution  TINYINT(1) DEFAULT 'F',
				description varchar(2048),
				distribution_path varchar(255),
				duration bigint,
				errors integer,
				finish_time datetime,
				ignore_sample_count integer,
				init_processes integer,
				init_sleep_time integer,
				last_progress_message varchar(2048),
				mean_test_time double,
				peak_tps double,
				errorRate double,
			    minRT double,
				pct25RT double,
				pct50RT double,
				pct75RT double,
				pct90RT double,
				pct95RT double,
				pct99RT double,
				maxRT double,
				port integer,
				process_increment integer,
				process_increment_interval integer,
				processes integer,
				progress_message varchar(2048),
				run_count integer,
				scheduled_time datetime,
				script_name varchar(255),
				script_revision bigint,
				send_mail char(255),
				start_time datetime,
				status varchar(255),
				stop_request char(255),
				tag_string varchar(255),
				target_hosts varchar(255),
				test_comment varchar(2048),
				test_error_cause varchar(255),
				name varchar(255),
				test_time_standard_deviation double,
				tests integer,
				threads integer,
				threshold varchar(255),
				tps double,
				use_rampup char(255),
				vuser_per_agent integer,
				created_user bigint,
				last_modified_user bigint,
			    agent_stat blob,
			    running_sample blob,
			    rampup_type varchar(10),
				target_hosts blob,
			    primary key (id)
		    );
		
		    create table PERF_TEST_TAG (
		        perf_test_id bigint not null,
		        tag_id bigint not null,
		        primary key (perf_test_id, tag_id)
		    );
		
		    create table TAG (
			    id bigint(20) not null auto_increment,
		        created_date datetime,
		        last_modified_date datetime,
		        tagValue varchar(255),
		        created_user bigint,
		        last_modified_user bigint,
		        primary key (id)
		    );
		
		    create table system_monitor (
			    id bigint(20) not null auto_increment,
		        collect_time bigint,
		        cpu_used_percentage double,
		        crtime varchar(255),
		        free_memory bigint,
		        idle_cpu_value double,
		        ip varchar(255),
		        monitor_key varchar(255),
		        load_avg_1 double,
		        load_avg_15 double,
		        load_avg_5 double,
		        message varchar(255),
		        port integer not null,
		        system varchar(255),
		        total_cpu_value double,
		        total_memory bigint,
		        primary key (id)
		    );
		
		    create index last_modified_user_index_NUSER on NUSER (last_modified_user);
		
		    create index created_user_index on NUSER (created_user);
		
			create index last_modified_user_index_PERF_TEST on PERF_TEST (last_modified_user);
		
		    create index created_user_index_PERF_TEST on PERF_TEST (created_user);
		
		    create index scheduled_time_index on PERF_TEST (scheduled_time);
		
		    create index last_modified_user_index_TAG on TAG (last_modified_user);
		
		    create index created_user_index_TAG on TAG (created_user);

		    create index monitor_key_index on system_monitor (monitor_key);
		
		    create index collect_time_index on system_monitor (collect_time);
		
		    create index ip_index on system_monitor (ip);
						   
    			
	    </sql>
    </changeSet>
</databaseChangeLog>
